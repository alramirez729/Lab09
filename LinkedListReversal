class ListNode {
    int value;
    ListNode next;

    ListNode(int value) {
        this.value = value;
    }
}

public class LinkedListReversal
{
    public ListNode reverseLinkedList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }

        ListNode prev = null;
        ListNode current = head;
        ListNode next = null;

        while (current != null) {
            next = current.next;
            current.next = prev;
            prev = current;
            current = next;
        }

        return prev;
    }

    public static void printLinkedList(ListNode head)
    {
        ListNode current = head;
        while (current != null) {
            System.out.print(current.value + " -> ");
            current = current.next;
        }
        System.out.println("null");
    }

    public static void main(String[] args)
    {
        // Create a linked list: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8
        ListNode head = new ListNode(1);
        ListNode current = head;
        for (int i = 2; i <= 8; i++) {
            current.next = new ListNode(i);
            current = current.next;
        }

        System.out.println("Original Node List:");
        printLinkedList(head);
        LinkedListReversal reverser = new LinkedListReversal();
        ListNode newHead = reverser.reverseLinkedList(head);

        // The linked list will be reversed in groups of 3: 3 -> 2 -> 1 -> 6 -> 5 -> 4 -> 7 -> 8
        System.out.println("Original Node List:");
        printLinkedList(newHead);
    }
}
